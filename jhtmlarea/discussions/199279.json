[
  {
    "Id": "407948",
    "ThreadId": "199279",
    "Html": "<p>Hi,</p>\r\n<p>is there any way how to force the editor to use some (default) containing element for text I write (&lt;p&gt;)?<br>When I delete all content and start writing again, resulting html code is without any tags which is undesirable (for me).</p>\r\n<p>Thanks</p>",
    "PostedDate": "2010-02-26T01:21:41.77-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "482379",
    "ThreadId": "199279",
    "Html": "<p>EDIT: I had a look at doing this directly in the plug-in. I was able to modify the default output by doing the following...</p>\r\n<p>Change the following (line 305 onwards):</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>        initEditor: <span style=\"color:blue\">function</span>(options) {\r\n            <span style=\"color:blue\">var</span> edit = <span style=\"color:blue\">this</span>.editor = <span style=\"color:blue\">this</span>.iframe[0].contentWindow.document;\r\n            <span style=\"color:green\">// console.log(this.iframe[0].contentWindow.document.toString.length);</span>\r\n            edit.designMode = <span style=\"color:#a31515\">'on'</span>;\r\n            edit.open();\r\n            edit.write(<span style=\"color:blue\">this</span>.textarea.val());\r\n            edit.close();\r\n            <span style=\"color:blue\">if</span> (options.css) {\r\n                <span style=\"color:blue\">var</span> e = edit.createElement(<span style=\"color:#a31515\">'link'</span>); e.rel = <span style=\"color:#a31515\">'stylesheet'</span>; e.type = <span style=\"color:#a31515\">'text/css'</span>; e.href = options.css; edit.getElementsByTagName(<span style=\"color:#a31515\">'head'</span>)[0].appendChild(e);\r\n            }\r\n        },</pre>\r\n</div>\r\n<p>To:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>        initEditor: <span style=\"color:blue\">function</span>(options) {\r\n            <span style=\"color:blue\">var</span> edit = <span style=\"color:blue\">this</span>.editor = <span style=\"color:blue\">this</span>.iframe[0].contentWindow.document;\r\n            <span style=\"color:green\">// console.log(this.iframe[0].contentWindow.document.toString.length);</span>\r\n            edit.designMode = <span style=\"color:#a31515\">'on'</span>;\r\n            edit.open();\r\n            <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>.textarea.val().length==0) {\r\n                edit.write(<span style=\"color:#a31515\">'&lt;p&gt;&amp;nbsp;&lt;/p&gt;'</span>);\r\n            } <span style=\"color:blue\">else</span> {\r\n                edit.write(<span style=\"color:blue\">this</span>.textarea.val());\r\n            }\r\n            edit.close();\r\n            <span style=\"color:blue\">if</span> (options.css) {\r\n                <span style=\"color:blue\">var</span> e = edit.createElement(<span style=\"color:#a31515\">'link'</span>); e.rel = <span style=\"color:#a31515\">'stylesheet'</span>; e.type = <span style=\"color:#a31515\">'text/css'</span>; e.href = options.css; edit.getElementsByTagName(<span style=\"color:#a31515\">'head'</span>)[0].appendChild(e);\r\n            }\r\n        },</pre>\r\n</div>\r\n<p>What I think I've managed to achieve is, evaluating the length of content in the textarea. If it's zero, inserting an non-breaking space wrapped in a paragraph tag. This means that when users start typing within the jHtmlArea is should already be a paragraph.</p>\r\n<p>The alternative solution, which I'm using in my bespoke CMS, is to place the paragraph tag directly in the text area itself. For example, I have a form generator that builds my form controls. The code for that, just for readers to get an idea on the implementation, is as follows:</p>\r\n<p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">if</span> (strlen(trim($value))==0) {\r\n    $value = <span style=\"color:#a31515\">&quot;&lt;p&gt;Edit...&lt;/p&gt;&quot;</span>;\r\n}\r\n$form.= <span style=\"color:#a31515\">'    &lt;div class=&quot;label&quot;&gt;&lt;label for=&quot;'</span>.$id.<span style=\"color:#a31515\">'&quot;&gt;'</span> . to_human($name) . <span style=\"color:#a31515\">'&lt;/label&gt;&lt;/div&gt;'</span> . <span style=\"color:#a31515\">&quot;\\n&quot;</span>;\r\n$form.= <span style=\"color:#a31515\">'    &lt;div class=&quot;input&quot;&gt;&lt;textarea name=&quot;'</span>.$name.<span style=\"color:#a31515\">'&quot; id=&quot;'</span>.$id.<span style=\"color:#a31515\">'&quot; class=&quot;wysiwyg&quot; rows=&quot;20&quot; cols=&quot;60&quot; style=&quot;width:700px;&quot;&gt;'</span>.$value.<span style=\"color:#a31515\">'&lt;/textarea&gt;&lt;/div&gt;'</span> . <span style=\"color:#a31515\">&quot;\\n&quot;</span>;\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Where the value variable is the value from the database, or the $_POST array, or whatever.</p>\r\n<p>Hope this helps someone!</p>",
    "PostedDate": "2010-08-19T08:53:51.13-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]